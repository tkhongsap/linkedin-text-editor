Instructions for the Replit Agent
What You Want to Do
Update the existing "LinkedIn Text Formatter" app (currently using Python and Flask on Replit) to replace the plain text area with a rich text editor that includes buttons for bold, italic, and underline formatting. The editor should allow users to apply these styles visually, and the app will convert the formatted text into Unicode characters (e.g., bold → 𝐛𝐨𝐥𝐝, italic → 𝑖𝑡𝑎𝑙𝑖𝑐) for LinkedIn compatibility in the preview and copy output.

How the App Will Work
Users access the app via the Replit-hosted web interface.
Instead of a plain <textarea>, the app will use a rich text editor (e.g., TipTap or a similar lightweight WYSIWYG editor) with buttons for bold, italic, and underline.
When users apply styles (e.g., clicking the bold button), the editor will visually show the formatted text.
Upon clicking a "Preview" button, the app will parse the rich text, extract the styled sections, and convert them into Unicode characters for LinkedIn (e.g., bold text → 𝐛𝐨𝐥𝐝, italic text → 𝑖𝑡𝑎𝑙𝑖𝑐).
The formatted text will appear in a preview section, and users can copy it to their clipboard for pasting into LinkedIn.
Features of the Updated App
Rich Text Editor: Includes buttons for bold, italic, and underline, styled like the Typegrow editor (e.g., B, I, U icons).
Visual Formatting: Users can highlight text and click buttons to apply styles, seeing the changes in real-time within the editor.
Preview Functionality: Displays the text formatted with Unicode characters (e.g., 𝐛𝐨𝐥𝐝, 𝑖𝑡𝑎𝑙𝑖𝑐) as it would appear on LinkedIn.
Copy to Clipboard: Allows users to copy the Unicode-formatted text for use on LinkedIn.
Simple Design: Maintains a clean, dark-themed interface (similar to the second image provided) with an input area and preview section.
Steps to Update the App in Replit
Install Required Libraries:
Open the Replit Shell and install the flask and tippy.js (or a similar lightweight WYSIWYG editor like TipTap, Quill, or TinyMCE). Run:
text
Wrap
Copy
pip install flask
For the rich text editor, we’ll use TipTap (a Vue-based editor, but we’ll adapt it for plain JavaScript/CSS). Add TipTap and its dependencies via a CDN in the HTML (no pip install needed for this example, as we’ll use web resources).
Modify main.py to Integrate a Rich Text Editor:
Update the existing main.py to replace the plain <textarea> with a rich text editor. Use TipTap or a similar library for simplicity. Below is the updated code:
python
Wrap
Copy
from flask import Flask, request, render_template_string
import re
import os
from bs4 import BeautifulSoup  # You'll need to install this: `pip install beautifulsoup4`

# Define style maps for bold, italic, and underline using Unicode characters
bold_map = {chr(ord('A') + i): chr(0x1D400 + i) for i in range(26)}
bold_map.update({chr(ord('a') + i): chr(0x1D41A + i) for i in range(26)})
italic_map = {chr(ord('A') + i): chr(0x1D434 + i) for i in range(26)}
italic_map.update({chr(ord('a') + i): chr(0x1D44E + i) for i in range(26)})

# Function to apply a style to text
def apply_style(text, style_map):
    return ''.join(style_map.get(c, c) for c in text)

# Function to parse HTML and apply styles based on tags
def parse_html(html):
    soup = BeautifulSoup(html, 'html.parser')
    result = ""

    for element in soup.recursiveChildGenerator():
        if element.name == 'strong':  # Bold
            text = element.get_text()
            result += apply_style(text, bold_map)
        elif element.name == 'em':  # Italic
            text = element.get_text()
            result += apply_style(text, italic_map)
        elif element.name == 'u':  # Underline (will remain as plain text, as LinkedIn doesn’t support it)
            text = element.get_text()
            result += text
        elif isinstance(element, str):  # Plain text
            result += element
    return result

# Initialize Flask app
app = Flask(__name__)

# HTML template with TipTap editor and styling
HTML_TEMPLATE = """
<html>
<head>
    <title>LinkedIn Text Formatter</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #1a1a1a;
            color: #ffffff;
            margin: 20px;
        }
        .editor {
            background-color: #2d2d2d;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .ProseMirror {
            min-height: 150px;
            background-color: #2d2d2d;
            color: #ffffff;
            padding: 10px;
            border: 1px solid #444;
        }
        .preview {
            background-color: #2d2d2d;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }
        button {
            background-color: #4a4a4a;
            color: #ffffff;
            border: none;
            padding: 5px 10px;
            margin-right: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #5a5a5a;
        }
    </style>
    <!-- TipTap CDN for rich text editing -->
    <script src="https://cdn.jsdelivr.net/npm/@tiptap/core@latest/dist/index.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tiptap/starter-kit@latest/dist/index.umd.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@tiptap/starter-kit@latest/dist/index.css" rel="stylesheet">
</head>
<body>
    <h1>LinkedIn Text Formatter</h1>
    <p>Format your LinkedIn posts with bold, italic, and underline. Preview and copy the text for LinkedIn.</p>
    <div class="editor">
        <button onclick="editor.chain().focus().toggleBold().run()">B</button>
        <button onclick="editor.chain().focus().toggleItalic().run()">I</button>
        <button onclick="editor.chain().focus().toggleUnderline().run()">U</button>
        <div id="editor"></div>
    </div>
    <form method="post">
        <input type="hidden" name="html" id="htmlInput">
        <input type="submit" value="Preview">
    </form>
    {% if formatted_text %}
        <div class="preview">
            <h2>Preview:</h2>
            <pre id="preview">{{ formatted_text }}</pre>
            <button onclick="copyToClipboard()">Copy</button>
        </div>
        <p><i>Note: LinkedIn only supports bold and italic via Unicode. Underline will appear as plain text.</i></p>
    {% endif %}
    <script>
        // Initialize TipTap editor
        const editor = new tippy.core.Editor({
            element: document.querySelector('#editor'),
            content: '',
            extensions: [tippy.starterKit],
            onUpdate: ({ editor }) => {
                document.getElementById('htmlInput').value = editor.getHTML();
            }
        });

        function copyToClipboard() {
            var text = document.getElementById('preview').textContent;
            navigator.clipboard.writeText(text).then(function() {
                alert('Copied to clipboard');
            }, function(err) {
                alert('Failed to copy: ' + err);
            });
        }
    </script>
</body>
</html>
"""

# Define the main route
@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        html = request.form['html']
        formatted_text = parse_html(html)
        return render_template_string(HTML_TEMPLATE, formatted_text=formatted_text)
    return render_template_string(HTML_TEMPLATE)

# Run the app
if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)
Install BeautifulSoup4:
In the Replit Shell, run:
text
Wrap
Copy
pip install beautifulsoup4
This is needed to parse the HTML output from the rich text editor.
Run and Test the Updated App:
Click the "Run" button in Replit to compile and launch the app.
In the webview or by opening the provided URL, you’ll see a dark-themed interface with a rich text editor (using TipTap) featuring bold (B), italic (I), and underline (U) buttons.
Test the app:
Type text (e.g., "Hello world").
Highlight "Hello" and click the B button to make it bold, then highlight "world" and click the I button to make it italic.
Click "Preview" to see the formatted output (e.g., 𝐇𝐞𝐥𝐥𝐨 𝑤𝑜𝑟𝑙𝑑).
Click "Copy" to copy the Unicode-formatted text and paste it into LinkedIn to verify.
Notes for the Agent:
The rich text editor uses TipTap, loaded via CDN, for simplicity. If TipTap doesn’t work as expected, consider alternatives like Quill or TinyMCE, but they may require additional setup (e.g., npm or custom imports).
Underline (U) is included in the editor for consistency with the Typegrow design, but LinkedIn doesn’t support it via Unicode, so it will appear as plain text in the preview and output.
Ensure the styling matches the dark theme shown in the second image (e.g., dark background #1a1a1a, light text #ffffff).
The app supports only English letters for Unicode styling (A-Z, a-z); numbers, punctuation, and emojis remain unchanged.